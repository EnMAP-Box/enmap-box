# autogenerated file. 
# changes will be overwritten when running scripts\update_unittestdata_init.py
import pathlib
root = pathlib.Path(__file__).parent

classification_dataset_csv = (root / 'classification_dataset.csv').as_posix()
classification_dataset_gpkg = (root / 'classification_dataset.gpkg').as_posix()
classification_dataset_pkl = (root / 'classification_dataset.pkl').as_posix()
classification_dataset_qml = (root / 'classification_dataset.qml').as_posix()
classifier_pkl = (root / 'classifier.pkl').as_posix()
classifier_pkl_json = (root / 'classifier.pkl.json').as_posix()
enmap_uncompressed_tif = (root / 'enmap_uncompressed.tif').as_posix()
force_features_csv = (root / 'force_features.csv').as_posix()
force_labels_csv = (root / 'force_labels.csv').as_posix()
fraction_map_l3_tif = (root / 'fraction_map_l3.tif').as_posix()
fraction_points_gpkg = (root / 'fraction_points.gpkg').as_posix()
fraction_points_qml = (root / 'fraction_points.qml').as_posix()
fraction_points_singletarget_gpkg = (root / 'fraction_points_singletarget.gpkg').as_posix()
fraction_polygons_l3_tif = (root / 'fraction_polygons_l3.tif').as_posix()
landcover_berlin_point_multipart_3035_gpkg = (root / 'landcover_berlin_point_multipart_3035.gpkg').as_posix()
landcover_berlin_point_singlepart_3035_gpkg = (root / 'landcover_berlin_point_singlepart_3035.gpkg').as_posix()
landcover_berlin_polygon_3classes_gpkg = (root / 'landcover_berlin_polygon_3classes.gpkg').as_posix()
landcover_berlin_polygon_3classes_qml = (root / 'landcover_berlin_polygon_3classes.qml').as_posix()
landcover_berlin_polygon_3classes_EPSG4326_gpkg = (root / 'landcover_berlin_polygon_3classes_EPSG4326.gpkg').as_posix()
landcover_berlin_polygon_3classes_id_gpkg = (root / 'landcover_berlin_polygon_3classes_id.gpkg').as_posix()
landcover_map_l2_qml = (root / 'landcover_map_l2.qml').as_posix()
landcover_map_l2_tif = (root / 'landcover_map_l2.tif').as_posix()
landcover_map_l3_qml = (root / 'landcover_map_l3.qml').as_posix()
landcover_map_l3_tif = (root / 'landcover_map_l3.tif').as_posix()
landcover_raster_1m_qml = (root / 'landcover_raster_1m.qml').as_posix()
landcover_raster_1m_tif = (root / 'landcover_raster_1m.tif').as_posix()
landcover_raster_1m_3classes_qml = (root / 'landcover_raster_1m_3classes.qml').as_posix()
landcover_raster_1m_3classes_tif = (root / 'landcover_raster_1m_3classes.tif').as_posix()
landcover_raster_1m_EPSG3035_qml = (root / 'landcover_raster_1m_EPSG3035.qml').as_posix()
landcover_raster_1m_EPSG3035_tif = (root / 'landcover_raster_1m_EPSG3035.tif').as_posix()
landcover_raster_30m_qml = (root / 'landcover_raster_30m.qml').as_posix()
landcover_raster_30m_tif = (root / 'landcover_raster_30m.tif').as_posix()
landcover_raster_30m_EPSG3035_qml = (root / 'landcover_raster_30m_EPSG3035.qml').as_posix()
landcover_raster_30m_EPSG3035_tif = (root / 'landcover_raster_30m_EPSG3035.tif').as_posix()
landsat8_srf_gpkg = (root / 'landsat8_srf.gpkg').as_posix()
library_gpkg = (root / 'library.gpkg').as_posix()
points_in_no_data_region_gpkg = (root / 'points_in_no_data_region.gpkg').as_posix()
regression_dataset_pkl = (root / 'regression_dataset.pkl').as_posix()
regression_library_gpkg = (root / 'regression_library.gpkg').as_posix()
regression_library_qml = (root / 'regression_library.qml').as_posix()
water_mask_30m_tif = (root / 'water_mask_30m.tif').as_posix()